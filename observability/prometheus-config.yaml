apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: cl-live
  labels:
    app: prometheus
    component: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'crowetrade-prod'
        environment: 'production'

    rule_files:
      - "/etc/prometheus/rules/*.yml"

    alerting:
      alertmanagers:
        - static_configs:
            - targets:
              - alertmanager:9093

    scrape_configs:
      # Prometheus itself
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      # Kubernetes API Server
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
          - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
            action: keep
            regex: default;kubernetes;https

      # Kubernetes Nodes
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
          - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
          - action: labelmap
            regex: __meta_kubernetes_node_label_(.+)

      # Kubernetes Pods
      - job_name: 'kubernetes-pods'
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
            action: replace
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
            target_label: __address__
          - action: labelmap
            regex: __meta_kubernetes_pod_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: kubernetes_namespace
          - source_labels: [__meta_kubernetes_pod_name]
            action: replace
            target_label: kubernetes_pod_name

      # CroweTrade Services
      - job_name: 'crowetrade-portfolio-agents'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - cl-live
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: portfolio-agent

      - job_name: 'crowetrade-execution-agents'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - cl-live
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_app]
            action: keep
            regex: execution-agent

      - job_name: 'crowetrade-signal-agents'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - cl-live
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_component]
            action: keep
            regex: signal

      - job_name: 'crowetrade-risk-agents'
        kubernetes_sd_configs:
          - role: pod
            namespaces:
              names:
                - cl-live
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_label_component]
            action: keep
            regex: risk

      # Kafka Monitoring
      - job_name: 'kafka'
        static_configs:
          - targets: ['kafka:9308']  # JMX Exporter

      # Redis Monitoring
      - job_name: 'redis'
        static_configs:
          - targets: ['redis-exporter:9121']

  alert_rules.yml: |
    groups:
      - name: crowetrade.trading
        rules:
          - alert: HighPortfolioDrawdown
            expr: crowetrade_portfolio_drawdown > 0.02
            for: 1m
            labels:
              severity: critical
              team: trading
            annotations:
              summary: "Portfolio drawdown exceeding risk limits"
              description: "Portfolio {{ $labels.portfolio }} has drawdown of {{ $value | humanizePercentage }}"

          - alert: ExecutionLatencyHigh
            expr: histogram_quantile(0.95, crowetrade_execution_latency_seconds) > 0.1
            for: 2m
            labels:
              severity: warning
              team: execution
            annotations:
              summary: "High execution latency detected"
              description: "95th percentile execution latency is {{ $value }}s"

          - alert: SignalGenerationFailure
            expr: rate(crowetrade_signal_generation_errors_total[5m]) > 0.1
            for: 1m
            labels:
              severity: critical
              team: research
            annotations:
              summary: "Signal generation failing"
              description: "Signal generation error rate is {{ $value | humanizePercentage }}"

          - alert: RiskLimitBreach
            expr: crowetrade_risk_limit_breaches_total > 0
            for: 0s
            labels:
              severity: critical
              team: risk
            annotations:
              summary: "Risk limit breach detected"
              description: "Risk limit breach on {{ $labels.limit_type }}"

          - alert: MarketDataStale
            expr: time() - crowetrade_market_data_last_update > 30
            for: 1m
            labels:
              severity: warning
              team: data
            annotations:
              summary: "Market data feed stale"
              description: "No market data updates for {{ $labels.symbol }} in {{ $value }}s"

      - name: crowetrade.infrastructure
        rules:
          - alert: PodCrashLooping
            expr: rate(kube_pod_container_status_restarts_total[15m]) > 0
            for: 5m
            labels:
              severity: warning
              team: platform
            annotations:
              summary: "Pod is crash looping"
              description: "Pod {{ $labels.namespace }}/{{ $labels.pod }} is restarting frequently"

          - alert: HighMemoryUsage
            expr: container_memory_usage_bytes / container_spec_memory_limit_bytes > 0.9
            for: 2m
            labels:
              severity: warning
              team: platform
            annotations:
              summary: "Container memory usage high"
              description: "Container {{ $labels.container }} memory usage is {{ $value | humanizePercentage }}"

          - alert: KafkaConsumerLag
            expr: kafka_consumer_lag_sum > 10000
            for: 2m
            labels:
              severity: warning
              team: platform
            annotations:
              summary: "Kafka consumer lag high"
              description: "Consumer group {{ $labels.consumergroup }} lag is {{ $value }}"
