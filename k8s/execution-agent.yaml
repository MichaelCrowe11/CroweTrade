apiVersion: apps/v1
kind: Deployment
metadata:
  name: execution-agent
  namespace: cl-live
  labels:
    app: execution-agent
    component: execution
    tier: core
    version: v1.0.0
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 2
  selector:
    matchLabels:
      app: execution-agent
  template:
    metadata:
      labels:
        app: execution-agent
        component: execution
        tier: core
        version: v1.0.0
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "8080"
        prometheus.io/path: "/metrics"
    spec:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 2000
        seccompProfile:
          type: RuntimeDefault
      serviceAccountName: execution-agent
      containers:
      - name: execution-agent
        image: crowetrade/execution-agent:latest
        imagePullPolicy: IfNotPresent
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        - name: grpc
          containerPort: 9090
          protocol: TCP
        env:
        - name: ENVIRONMENT
          value: "production"
        - name: LOG_LEVEL
          value: "INFO"
        - name: SERVICE_NAME
          value: "execution-agent"
        - name: KAFKA_BROKERS
          value: "kafka:9092"
        - name: REDIS_URL
          value: "redis://redis:6379"
        - name: PROMETHEUS_PORT
          value: "8080"
        envFrom:
        - secretRef:
            name: execution-secrets
        - configMapRef:
            name: execution-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
        livenessProbe:
          httpGet:
            path: /health/live
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /health/ready
            port: http
          initialDelaySeconds: 5
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - ALL
          readOnlyRootFilesystem: true
        volumeMounts:
        - name: tmp-volume
          mountPath: /tmp
        - name: cache-volume
          mountPath: /app/cache
        - name: config-volume
          mountPath: /app/config
          readOnly: true
      volumes:
      - name: tmp-volume
        emptyDir: {}
      - name: cache-volume
        emptyDir:
          sizeLimit: 1Gi
      - name: config-volume
        configMap:
          name: execution-config
      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - execution-agent
              topologyKey: kubernetes.io/hostname
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: topology.kubernetes.io/zone
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: execution-agent

---
apiVersion: v1
kind: Service
metadata:
  name: execution-agent
  namespace: cl-live
  labels:
    app: execution-agent
    component: execution
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: http
    protocol: TCP
  - name: grpc
    port: 9090
    targetPort: grpc
    protocol: TCP
  selector:
    app: execution-agent

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: execution-agent
  namespace: cl-live
  labels:
    app: execution-agent
    component: execution

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  namespace: cl-live
  name: execution-agent
rules:
- apiGroups: [""]
  resources: ["configmaps", "secrets"]
  verbs: ["get", "list", "watch"]
- apiGroups: [""]
  resources: ["pods"]
  verbs: ["get", "list", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: execution-agent
  namespace: cl-live
subjects:
- kind: ServiceAccount
  name: execution-agent
  namespace: cl-live
roleRef:
  kind: Role
  name: execution-agent
  apiGroup: rbac.authorization.k8s.io

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: execution-config
  namespace: cl-live
  labels:
    app: execution-agent
    component: execution
data:
  config.yaml: |
    execution:
      venues:
        - name: "NYSE"
          protocol: "FIX"
          endpoint: "fix.nyse.com:9999"
          enabled: true
        - name: "NASDAQ"
          protocol: "FIX"
          endpoint: "fix.nasdaq.com:9999"
          enabled: true
      algorithms:
        vwap:
          enabled: true
          max_participation: 0.1
        twap:
          enabled: true
          min_slice_time: 60
        pov:
          enabled: true
          default_rate: 0.05
      risk_limits:
        max_order_size: 1000000
        max_position_delta: 5000000
        max_daily_volume: 50000000
      tca:
        enabled: true
        benchmark_window: 300
        impact_model: "almgren_chriss"
    
  logging.yaml: |
    version: 1
    formatters:
      default:
        format: '%(asctime)s - %(name)s - %(levelname)s - %(message)s'
    handlers:
      console:
        class: logging.StreamHandler
        level: INFO
        formatter: default
        stream: ext://sys.stdout
    root:
      level: INFO
      handlers: [console]
    loggers:
      crowetrade:
        level: INFO
        propagate: false
        handlers: [console]

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: execution-agent-pdb
  namespace: cl-live
spec:
  minAvailable: 2
  selector:
    matchLabels:
      app: execution-agent
