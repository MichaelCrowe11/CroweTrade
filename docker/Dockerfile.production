# Production-Ready Docker Image for CroweTrade AI Trading Infrastructure

FROM python:3.11-slim as builder

# Install system dependencies
RUN apt-get update && apt-get install -y \
    build-essential \
    gcc \
    g++ \
    gfortran \
    libopenblas-dev \
    liblapack-dev \
    pkg-config \
    && rm -rf /var/lib/apt/lists/*

# Create virtual environment
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Copy requirements and install Python dependencies
COPY requirements.txt requirements-dev.txt ./
RUN pip install --upgrade pip setuptools wheel
RUN pip install --no-cache-dir -r requirements.txt

# Production stage
FROM python:3.11-slim

# Install runtime dependencies
RUN apt-get update && apt-get install -y \
    libopenblas0-pthread \
    liblapack3 \
    libgomp1 \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Copy virtual environment from builder
COPY --from=builder /opt/venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Create app user for security
RUN groupadd -r crowetrade && useradd -r -g crowetrade crowetrade

# Create necessary directories
RUN mkdir -p /app/data /app/models /app/logs /app/config
RUN chown -R crowetrade:crowetrade /app

# Copy application code
COPY --chown=crowetrade:crowetrade src/ /app/src/
COPY --chown=crowetrade:crowetrade config/ /app/config/
COPY --chown=crowetrade:crowetrade pyproject.toml /app/

# Set working directory
WORKDIR /app

# Install the application
RUN pip install -e .

# Switch to non-root user
USER crowetrade

# Environment variables for production
ENV PYTHONPATH=/app/src
ENV CROWETRADE_ENV=production
ENV CROWETRADE_LOG_LEVEL=INFO
ENV CROWETRADE_DATA_DIR=/app/data
ENV CROWETRADE_MODELS_DIR=/app/models
ENV CROWETRADE_CONFIG_DIR=/app/config

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Expose ports
EXPOSE 8080 8081 8082

# Default command (can be overridden)
CMD ["python", "-m", "crowetrade.main"]
